version: '3.1' 

services:
  rdf4j-docker:
    container_name: rdf4j-docker
    image: openkbs/rdf4j-docker
    hostname: ${HOSTNAME}
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - ./.env
    environment:
      - USER_ID=${USER_ID:-1000}
      - GROUP_ID=${GROUP_ID:-1000}
      # - APP_HOME=${APP_HOME:-/home/developer/app}
      # - APP_MAIN=${APP_MAIN:-setup.sh}
      - DOCKER_HOST_IP=${DOCKER_HOST_IP:-127.0.0.1}
      - DOCKER_HOST_NAME=${DOCKER_HOST_NAME:-localhost}
      ## ==== RDF4J Setup: ====
      - RDF4J_VERSION=${RDF4J_VERSION:-3.6.3}
      - RDF4J_DATA=${RDF4J_DATA:-/opt/eclipse-rdf4j-${RDF4J_VERSION}/data}
      - JVM_PARAMS=${JVM_PARAMS:-"-Xms1g -Xmx4g"}
    volumes:
      ## ==== Common mapping ====
      #- /etc/hosts:/etc/hosts
      #- /dev/shm:/dev/shm 
      #- /var/run/docker.sock:/var/run/docker.sock
      ## ==== RDF4J Setup: ====
      ## (make sure you manually create directory below before you run docker-compose!!)
      ## (mkdir -p ./data)
      - ./data:${RDF4J_DATA}
      ## ==== Use $HOME/data-docker/rdf4j-docker for mapping Volumes ====
      ## (You need to manually create those child directory: ./data, ./workspace, and others)
      - ./data:/home/tomcat/data
      - ./workspace:/home/tomcat/workspace
      #- $HOME/data-docker/rdf4j-docker/data:/home/tomcat/data
      #- $HOME/data-docker/rdf4j-docker/workspace:/home/tomcat/workspace
      ## ==== Special Volume for RDF4J Repositories
      #- rdf4j_volume:/home/tomcat/rdf4j_data:rw

    ## -------------------------------
    ## -- Change to your specific port
    ## -------------------------------
    ports:
      - 28080:8080
      - 28443:8443

    ## -----------------------------
    ## -- Network setup if needed --
    ## -----------------------------
    # networks:
    #  - dev_network

#volumes:
#    rdf4j_volume:
#        external: false

#networks:
#  dev_network:
#    external:
#      name: dev_network


